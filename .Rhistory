lm.fit2=lm(medv~lstat+I(lstat^2))
summary(lm.fit2)
plot(lstat, medv)
plot(I(lstat^2),medv)
plot(lstat+I(lstat^2),medv)
lm.fit=lm(medv~lstat)
anova(lm.fit, lm.fit2)
par(mfrow=c(2,2))
plot(lm.fit2)
lm.fit5=lm(medv~poly(lstat,5))
summary(lm.fit5)
plot(lm.fit5)
summary(lm(medv~log(rm),data=Boston))
fix(Carseats)
# The syntax lstat:black tells R to include an interaction term between lstat and black
# lstat*age it is a shorthand for lstat+age+lstat:age.
summary(lm(medv~lstat*age, data=Boston))
lm.fitla=lm(medv~lstat*age, data=Boston)
plot(lm.fitla)
# The syntax lstat:black tells R to include an interaction term between lstat and black
# lstat*age it is a shorthand for lstat+age+lstat:age.
summary(lm(medv~lstat*age, data=Boston))
lm.fitla=lm(medv~lstat*age, data=Boston)
plot(lm.fitla)
# The syntax lm(y???x1+x2+x3) is used to ???t a model with three predictors, x1, x2, and x3.
lm.fit=lm(medv~lstat+age,data=Boston)
summary(lm.fit)
plot(lstat,medv, data=Boston)
plot(age,medv, data=Boston)
plot(lstat*age, medv, data= Boston)
# 3.6.5Non-linear Transformations of the Prediction
lm.fit2=lm(medv~lstat+I(lstat^2))
# 3.6.5Non-linear Transformations of the Prediction
lm.fit2=lm(medv~lstat+I(lstat^2))
summary(lm.fit2)
lm.fit=lm(medv~lstat)
anova(lm.fit, lm.fit2)
par(mfrow=c(2,2))
plot(lm.fit2)
lm.fit5=lm(medv~poly(lstat,5))
summary(lm.fit5)
plot(lm.fit5)
# The syntax lstat:black tells R to include an interaction term between lstat and black
# lstat*age it is a shorthand for lstat+age+lstat:age.
summary(lm(medv~lstat*age, data=Boston))
lm.fitla=lm(medv~lstat*age, data=Boston)
plot(lm.fitla)
# 3.6.5Non-linear Transformations of the Prediction
lm.fit2=lm(medv~lstat+I(lstat^2))
summary(lm.fit2)
summary(lm.fit2)
plot(lstat, medv)
plot(I(lstat^2),medv)
plot(lstat+I(lstat^2),medv)
lm.fit=lm(medv~lstat)
anova(lm.fit, lm.fit2)
anova(lm.fit,lm.fitla)
# 3.6.5Non-linear Transformations of the Prediction
lm.fit2=lm(medv~lstat+I(lstat^2))
summary(lm.fit2)
plot(lstat, medv)
plot(lstat, medv)
plot(I(lstat^2),medv)
plot(lstat+I(lstat^2),medv)
par(mfrow=c(2,2))
plot(lm.fit2)
lm.fit5=lm(medv~poly(lstat,5))
summary(lm.fit5)
plot(lm.fit5)
summary(lm(medv~log(rm),data=Boston))
lm.fitl= lm(medv~log(rm),data=Boston)
anova(lm.fit2,lm.fit5,lm.fitl)
plot(i.fitl)
plot(lm.fitl)
anova(lm.fit5,lm.fitl)
anova(lm.fit2,lm.fit5,lm.fitl)
fix(Carseats)
anames(Carseats)
lm.fit=lm(Sales~.+Income:Advertising+Price:Age,data=Carseats)
summary (lm.fit)
fix(Carseats)
fix(Carseats)
anames(Carseats)
lm.fit=lm(Sales~.+Income:Advertising+Price:Age,data=Carseats)
summary (lm.fit)
attach(Carseats )
contrasts(ShelveLoc)
fix(Carseats)
surmmary(lm(Sales~.,data=Carseats))
summary(lm(Sales~.,data=Carseats))
？carseat
?Carseats
LoadLibraries
LoadLibraries()
#Ch3 8
read.csv(C:/Users/39384/OneDrive/Desktop/class/6850/Datasets/Auto.csv")
#Ch3 8
Auto=read.csv(C:/Users/39384/OneDrive/Desktop/class/6850/Datasets/Auto.csv")
#Ch3 8
Auto=read.csv("C:/Users/39384/OneDrive/Desktop/class/6850/Datasets/Auto.csv", header=T, na.strings="?")
Auto= na.omit(Auto)
summary(Auto)
lm.fit = lm(mpg~ horsepower)
# a
attach(Auto)
lm.fit = lm(mpg~ horsepower)
summary(lm.fit)
#iv
predict(lm.fit, data.frame(horsepower=c(98)), interval="confidence")
predict(lm.fit, data.frame(horsepower=c(98)), interval="prediction")
plot(lim.fit)
plot(lm.fit)
return()
plot(horsepower,mpg)
abline(lm.fit)
# c
par(mfrow=c(2,2))
plot(lm.fit)
#Ch3 9
pairs(Auto)
# b
cor(subset(Auto, select=-name))
# c
lm.fit1 = lm(mpg~.-name,data = Auto)
summary(lm.fit1)
#d
par(mfrow=c(2,2))
plot(lm.fit1)
#because there is a discernible curve pattern to the residuals plots. From the leverage plot, point 14 appears to have high leverage, although not a high magnitude residual.
plot(predict(lm.fit1), rstudent(lm.fit1))
#e
lm.fit2 = lm(mpg~cylinders*displacement+displacement*weight)
summary(lm.fit2)
#f
lm.fit3 = lm(mpg~log(weight)+sqrt(horsepower)+acceleration+I(acceleration^2))
summary(lm.fit3)
par(mfrow=c(2,2))
plot(lm.fit3)
plot(predict(lm.fit3), rstudent(lm.fit3))
#Apparently, from the p-values, the log(weight), sqrt(horsepower), and acceleration^2 all have statistical significance of some sort. The residuals plot has less of a discernible pattern than the plot of all linear regression terms. The studentized residuals displays potential outliers (>3). The leverage plot indicates more than three points with high leverage.
#However, 2 problems are observed from the above plots: 1) the residuals vs fitted plot indicates heteroskedasticity (unconstant variance over mean) in the model. 2) The Q-Q plot indicates somewhat unnormality of the residuals.
#So, a better transformation need to be applied to our model. From the correlation matrix in 9a., displacement, horsepower and weight show a similar nonlinear pattern against our response mpg. This nonlinear pattern is very close to a log form. So in the next attempt, we use log(mpg) as our response variable.
#The outputs show that log transform of mpg yield better model fitting (better R^2, normality of residuals).
lm.fit2<-lm(log(mpg)~cylinders+displacement+horsepower+weight+acceleration+year+origin,data=Auto)
summary(lm.fit2)
par(mfrow=c(2,2))
plot(lm.fit2)
plot(predict(lm.fit2),rstudent(lm.fit2))
#Ch3 11
set.seed(1)
x = rnorm(100)
y = 2*x + rnorm(100)
# a
lm.fit = lm(y~x+0)
summary(lm.fit)
# b
lm.fit = lm(x~y+0)
summary(lm.fit)
# d
(sqrt(length(x)-1) * sum(x*y)) / (sqrt(sum(x*x) * sum(y*y) - (sum(x*y))^2))
# f
lm.fit = lm(y~x)
lm.fit2 = lm(x~y)
summary(lm.fit)
summary(lm.fit2)
plot(lm.fitl)
plot(lm.fitl)
plot(lm.fitl)
anova(lm.fit2,lm.fit5,lm.fitl)
# The syntax lm(y???x1+x2+x3) is used to ???t a model with three predictors, x1, x2, and x3.
lm.fit=lm(medv~lstat+age,data=Boston)
summary(lm.fit)
# perform a regression using all of the predictors.
lm.fit=lm(medv~.,data=Boston)
summary(lm.fit)
library(car)
# compute variance in???ation factors (VIF)
vif(lm.fit)
# run a regression excluding this predictor(age)
lm.fit1=lm(medv~.-age,data=Boston)
summary(lm.fit1)
# Alternatively, the update() function can be used.
lm.fit1=update(lm.fit , ~.-age)
# The syntax lstat:black tells R to include an interaction term between lstat and black
# lstat*age it is a shorthand for lstat+age+lstat:age.
summary(lm(medv~lstat*age, data=Boston))
lm.fitla=lm(medv~lstat*age, data=Boston)
anova(lm.fit,lm.fitla)
plot(lm.fitla)
plot(lstat,medv, data=Boston)
plot(age,medv, data=Boston)
plot(lstat*age, medv, data= Boston)
# 3.6.5Non-linear Transformations of the Prediction
lm.fit2=lm(medv~lstat+I(lstat^2))
summary(lm.fit2)
plot(lstat, medv)
plot(I(lstat^2),medv)
plot(lstat+I(lstat^2),medv)
# 3.6.1 Libraries
library(MASS)
library(ISLR)
# 3.6.2 Simple Linear Regression
fix(Boston)
names(Boston)
?Boston
lm.fit=lm(medv~lstat)  #error
lm.fit=lm(medv~lstat,data=Boston) #correct
# attach Boston, the ???rst line works ???ne because R now recognizes the variables.
attach(Boston)
lm.fit=lm(medv~lstat)
lm.fit
summary(lm.fit)
# ???nd out what other pieces of information are stored in lm.fit
names(lm.fit)
#  extractor functions, the second code is btter
lm.fit$coefficients
coef(lm.fit)
# obtain a con???dence interval for the coe???cient estimates,
confint(lm.fit)
# produce con???dence intervals and prediction intervals
predict(lm.fit,data.frame(lstat=c(5,10,15)),interval="confidence")
predict(lm.fit,data.frame(lstat=c(5,10,15)),interval="prediction")
plot(lstat,medv)
# To draw a line with intercept a and slope b, we type abline(a,b)
abline(lm.fit)
# The lwd=3 command causes the width of the regression line to be increased by a factor of 3; this works for the plot() and lines() functions also. We can also use the pch option to create di???erent plotting symbols.
abline(lm.fit ,lwd=3)
abline(lm.fit ,lwd=3,col="red")
plot(lstat, medv, pch="20")
plot(lstat, medv, pch="+")
plot(1:20,1:20,pch=1:20) # different shape
# divide the image to be viewed simultaneously
par(mfrow=c(2,2))
plot(lm.fit)
# compute the residuals from a linear regression fit
plot(predict (lm.fit), residuals (lm.fit))
# return the studentized residuals
plot(predict (lm.fit), rstudent (lm.fit))
# compute Leverage statistics, hatvalues mean estimate-value
plot(hatvalues(lm.fit))
# identi???es the index of the largest element of a vector.
# In this case, it tells us which observation has the largest leverage statistic.
which.max(hatvalues(lm.fit))
# The syntax lm(y???x1+x2+x3) is used to ???t a model with three predictors, x1, x2, and x3.
lm.fit=lm(medv~lstat+age,data=Boston)
summary(lm.fit)
# perform a regression using all of the predictors.
lm.fit=lm(medv~.,data=Boston)
summary(lm.fit)
library(car)
# compute variance in???ation factors (VIF)
vif(lm.fit)
# run a regression excluding this predictor(age)
lm.fit1=lm(medv~.-age,data=Boston)
summary(lm.fit1)
# Alternatively, the update() function can be used.
lm.fit1=update(lm.fit , ~.-age)
# The syntax lstat:black tells R to include an interaction term between lstat and black
# lstat*age it is a shorthand for lstat+age+lstat:age.
summary(lm(medv~lstat*age, data=Boston))
lm.fitla=lm(medv~lstat*age, data=Boston)
anova(lm.fit,lm.fitla)
plot(lm.fitla)
plot(lstat,medv, data=Boston)
plot(age,medv, data=Boston)
plot(lstat*age, medv, data= Boston)
# 3.6.5Non-linear Transformations of the Prediction
lm.fit2=lm(medv~lstat+I(lstat^2))
summary(lm.fit2)
plot(lstat, medv)
plot(I(lstat^2),medv)
plot(lstat+I(lstat^2),medv)
lm.fit=lm(medv~lstat)
anova(lm.fit, lm.fit2)
par(mfrow=c(2,2))
plot(lm.fit2)
lm.fit5=lm(medv~poly(lstat,5))
summary(lm.fit5)
plot(lm.fit5)
summary(lm(medv~log(rm),data=Boston))
lm.fitl= lm(medv~log(rm),data=Boston)
plot(lm.fitl)
anova(lm.fit2,lm.fit5,lm.fitl)
fix(Carseats)
anames(Carseats)
summary(lm(Sales~.,data=Carseats))
lm.fit=lm(Sales~.+Income:Advertising+Price:Age,data=Carseats)
attach(Carseats )
contrasts(ShelveLoc)
# 3.6.7 Writing Functions
LoadLibraries()
LoadLibraries=function(){
library(ISLR)
library(MASS)
print("The libraries have been loaded.")
}
LoadLibraries
LoadLibraries()
#容易忽略：画线abline()， 对比更优模型anova(lm.fit ,lm.fit2)，、
#容易忽略：画线abline()， 对比更优模型anova(lm.fit ,lm.fit2)，、
#置信区间confint() ，预测predict (lm.fit ,data.frame(lstat=c(5,10,15)), interval="confidence")
names(Carseats)
# 3.6.5Non-linear Transformations of the Prediction
lm.fit2=lm(medv~lstat+I(lstat^2))
summary(lm.fit2)
par(mfrow=c(2,2))
plot(lm.fit2)
lm.fit=lm(medv~lstat)
anova(lm.fit, lm.fit2)
par(mfrow=c(2,2))
plot(lm.fit2)
lm.fit5=lm(medv~poly(lstat,5))
summary(lm.fit5)
plot(lm.fit5)
summary(lm(medv~log(rm),data=Boston))
lm.fitl= lm(medv~log(rm),data=Boston)
plot(lm.fitl)
anova(lm.fit2,lm.fit5,lm.fitl)
anova(lm.fit5,lm.fitl)
# The syntax lstat:black tells R to include an interaction term between lstat and black
# lstat*age it is a shorthand for lstat+age+lstat:age.
summary(lm(medv~lstat*age, data=Boston))
anova(lm.fit,lm.fitla)
# The syntax lm(y???x1+x2+x3) is used to ???t a model with three predictors, x1, x2, and x3.
lm.fit=lm(medv~lstat+age,data=Boston)
summary(lm.fit)
anova(lm.fit,lm.fitla)
plot(lm.fit)
plot(lm.fitla)
plot(lstat,medv, data=Boston)
# 3.6.5Non-linear Transformations of the Prediction
lm.fit2=lm(medv~lstat+I(lstat^2))
# The syntax lm(y???x1+x2+x3) is used to ???t a model with three predictors, x1, x2, and x3.
lm.fit=lm(medv~lstat+age,data=Boston)
summary(lm.fit)
plot(lm.fit)
# perform a regression using all of the predictors.
lm.fit=lm(medv~.,data=Boston)
summary(lm.fit)
# The syntax lm(y???x1+x2+x3) is used to ???t a model with three predictors, x1, x2, and x3.
lm.fit=lm(medv~lstat+age,data=Boston)
summary(lm.fit)
plot(lm.fit)
# compute Leverage statistics, hatvalues mean estimate-value
plot(hatvalues(lm.fit))
# identi???es the index of the largest element of a vector.
# In this case, it tells us which observation has the largest leverage statistic.
which.max(hatvalues(lm.fit))
# The syntax lm(y???x1+x2+x3) is used to ???t a model with three predictors, x1, x2, and x3.
lm.fit=lm(medv~lstat+age,data=Boston)
summary(lm.fit)
plot(lm.fit)
# perform a regression using all of the predictors.
lm.fit=lm(medv~.,data=Boston)
summary(lm.fit)
library(car)
# compute variance in???ation factors (VIF)
vif(lm.fit)
# run a regression excluding this predictor(age)
lm.fit1=lm(medv~.-age,data=Boston)
summary(lm.fit1)
# Alternatively, the update() function can be used.
lm.fit1=update(lm.fit , ~.-age)
# The syntax lstat:black tells R to include an interaction term between lstat and black
# lstat*age it is a shorthand for lstat+age+lstat:age.
summary(lm(medv~lstat*age, data=Boston))
lm.fitla=lm(medv~lstat*age, data=Boston)
anova(lm.fit,lm.fitla)
plot(lm.fitla)
plot(lstat,medv, data=Boston)
plot(age,medv, data=Boston)
plot(lstat*age, medv, data= Boston)
# 3.6.5Non-linear Transformations of the Prediction
lm.fit2=lm(medv~lstat+I(lstat^2))
summary(lm.fit2)
plot(lstat, medv)
plot(I(lstat^2),medv)
plot(lstat+I(lstat^2),medv)
lm.fit=lm(medv~lstat)
anova(lm.fit, lm.fit2)
par(mfrow=c(2,2))
plot(lm.fit2)
lm.fit5=lm(medv~poly(lstat,5))
par(mfrow=c(2,2))
plot(lm.fit2)
lm.fit5=lm(medv~poly(lstat,5))
summary(lm.fit5)
plot(lm.fit5)
summary(lm(medv~log(rm),data=Boston))
lm.fitl= lm(medv~log(rm),data=Boston)
plot(lm.fitl)
lm.fit=lm(medv~lstat)
anova(lm.fit, lm.fit2)
par(mfrow=c(2,2))
lm.fit=lm(medv~lstat)
anova(lm.fit, lm.fit2)
# divide the image to be viewed simultaneously
par(mfrow=c(2,2))
plot(lm.fit)
lm.fit
summary(lm.fit)
anova(lm.fit,lm.fitla)
# The syntax lstat:black tells R to include an interaction term between lstat and black
# lstat*age it is a shorthand for lstat+age+lstat:age.
summary(lm(medv~lstat*age, data=Boston))
anova(lm.fit,lm.fitla)
plot(lm.fitla)
summary(college$Elite)
plot(lstat,medv)
# divide the image to be viewed simultaneously
par(mfrow=c(2,2))
plot(lm.fit)
# compute Leverage statistics, hatvalues mean estimate-value
plot(hatvalues(lm.fit))
# The syntax lm(y???x1+x2+x3) is used to ???t a model with three predictors, x1, x2, and x3.
lm.fit=lm(medv~lstat+age,data=Boston)
summary(lm.fit)
plot(lm.fit)
# perform a regression using all of the predictors.
lm.fit=lm(medv~.,data=Boston)
summary(lm.fit)
library(car)
# compute variance in???ation factors (VIF)
vif(lm.fit)
# run a regression excluding this predictor(age)
lm.fit1=lm(medv~.-age,data=Boston)
summary(lm.fit1)
# Alternatively, the update() function can be used.
lm.fit1=update(lm.fit , ~.-age)
# The syntax lstat:black tells R to include an interaction term between lstat and black
# lstat*age it is a shorthand for lstat+age+lstat:age.
summary(lm(medv~lstat*age, data=Boston))
lm.fitla=lm(medv~lstat*age, data=Boston)
anova(lm.fit,lm.fitla)
plot(lm.fitla)
plot(lstat,medv, data=Boston)
plot(age,medv, data=Boston)
plot(lstat*age, medv, data= Boston)
# 3.6.5Non-linear Transformations of the Prediction
lm.fit2=lm(medv~lstat+I(lstat^2))
summary(lm.fit2)
plot(lstat, medv)
plot(I(lstat^2),medv)
plot(lstat+I(lstat^2),medv)
lm.fit=lm(medv~lstat)
anova(lm.fit, lm.fit2)
par(mfrow=c(2,2))
plot(lm.fit2)
lm.fit5=lm(medv~poly(lstat,5))
summary(lm.fit5)
plot(lm.fit5)
summary(lm(medv~log(rm),data=Boston))
lm.fitl= lm(medv~log(rm),data=Boston)
plot(lm.fitl)
anova(lm.fit2,lm.fit5,lm.fitl)
fix(Carseats)
names(Carseats)
summary(lm(Sales~.,data=Carseats))
lm.fit=lm(Sales~.+Income:Advertising+Price:Age,data=Carseats)
attach(Carseats )
contrasts(ShelveLoc)
# 3.6.7 Writing Functions
LoadLibraries()
# 3.6.5Non-linear Transformations of the Prediction
lm.fit2=lm(medv~lstat+I(lstat^2))
summary(lm.fit2)
anova(lm.fit,lm.fitla)
plot(lm.fitla)
plot(lstat,medv, data=Boston)
plot(age,medv, data=Boston)
plot(lstat*age, medv, data= Boston)
# 3.6.5Non-linear Transformations of the Prediction
lm.fit2=lm(medv~lstat+I(lstat^2))
summary(lm.fit2)
lm.fit=lm(medv~lstat)
anova(lm.fit, lm.fit2)
par(mfrow=c(2,2))
plot(lm.fit2)
lm.fit5=lm(medv~poly(lstat,5))
summary(lm.fit5)
plot(lm.fit5)
summary(lm(medv~log(rm),data=Boston))
lm.fitl= lm(medv~log(rm),data=Boston)
# The syntax lstat:black tells R to include an interaction term between lstat and black
# lstat*age it is a shorthand for lstat+age+lstat:age.
summary(lm(medv~lstat*age, data=Boston))
lm.fitla=lm(medv~lstat*age, data=Boston)
anova(lm.fit,lm.fitla)
plot(lm.fitla)
# attach Boston, the ???rst line works ???ne because R now recognizes the variables.
attach(Boston)
# attach Boston, the ???rst line works ???ne because R now recognizes the variables.
attach(Boston)
lm.fit=lm(medv~lstat)
plot(lm.fit)
fix(Carseats)
names(Carseats)
summary(lm(Sales~.,data=Carseats))
attach(Carseats )
contrasts(ShelveLoc)
?Boston
lm.fit=lm(medv~lstat)
anova(lm.fit, lm.fit2)
# 3.6.7 Writing Functions
LoadLibraries()
LoadLibraries=function(){
library(ISLR)
library(MASS)
print("The libraries have been loaded.")
}
LoadLibraries
LoadLibraries()
